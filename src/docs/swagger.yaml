definitions:
  entity.EntityCloudAccount:
    properties:
      access_key_id:
        type: string
      active:
        type: boolean
      cloud_provider:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      nickname:
        type: string
      secret_access_key:
        type: string
      updatedAt:
        type: string
    type: object
  entity.EntityInstance:
    properties:
      active:
        type: boolean
      cloud_account_id:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      instance_id:
        type: string
      instance_name:
        type: string
      instance_region:
        type: string
      instance_state:
        type: string
      instance_type:
        type: string
      updatedAt:
        type: string
    type: object
  entity.EntityUser:
    properties:
      active:
        type: boolean
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      is_admin:
        type: boolean
      name:
        maxLength: 120
        minLength: 3
        type: string
      password:
        maxLength: 120
        minLength: 4
        type: string
      updated_at:
        type: string
    required:
    - email
    - name
    - password
    type: object
  handlers.LoginData:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/cloud_account/:
    get:
      consumes:
      - application/json
      description: Get all cloud accounts
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityCloudAccount'
      security:
      - ApiKeyAuth: []
      summary: Get all cloud accounts
      tags:
      - CloudAccount
    post:
      consumes:
      - application/json
      description: Create cloud account
      parameters:
      - description: Cloud Account
        in: body
        name: entity.EntityCloudAccount
        required: true
        schema:
          $ref: '#/definitions/entity.EntityCloudAccount'
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: success
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create cloud account
      tags:
      - CloudAccount
    put:
      consumes:
      - application/json
      description: Update cloud account
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityCloudAccount'
      security:
      - ApiKeyAuth: []
      summary: Update cloud account
      tags:
      - CloudAccount
  /api/cloud_account/{id}:
    delete:
      consumes:
      - application/json
      description: Delete cloud account
      parameters:
      - description: Cloud Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete cloud account
      tags:
      - CloudAccount
    get:
      consumes:
      - application/json
      description: Get cloud account by id
      parameters:
      - description: Cloud Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityCloudAccount'
      security:
      - ApiKeyAuth: []
      summary: Get cloud account by id
      tags:
      - CloudAccount
  /api/cloud_account/{id}/{status}:
    get:
      consumes:
      - application/json
      description: Active/Deactive cloud account
      parameters:
      - description: Cloud Account ID
        in: path
        name: id
        required: true
        type: integer
      - description: Status
        in: path
        name: status
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityCloudAccount'
      security:
      - ApiKeyAuth: []
      summary: Active/Deactive cloud account
      tags:
      - CloudAccount
  /api/instances/:
    get:
      consumes:
      - application/json
      description: Get all instances
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityInstance'
      security:
      - ApiKeyAuth: []
      summary: Get all instances
      tags:
      - Instances
  /api/instances/{id}:
    get:
      consumes:
      - application/json
      description: Get instance by id
      parameters:
      - description: Instance ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityInstance'
      security:
      - ApiKeyAuth: []
      summary: Get instance by id
      tags:
      - Instances
  /api/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Login data
        in: body
        name: loginData
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginData'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityUser'
      summary: Login
      tags:
      - User
  /api/user/:
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: User
        in: body
        name: entity.EntityUser
        required: true
        schema:
          $ref: '#/definitions/entity.EntityUser'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityUser'
      security:
      - ApiKeyAuth: []
      summary: Create user
      tags:
      - User
  /api/user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityUser'
      security:
      - ApiKeyAuth: []
      summary: Delete user
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityUser'
      security:
      - ApiKeyAuth: []
      summary: Get user
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User
        in: body
        name: entity.EntityUser
        required: true
        schema:
          $ref: '#/definitions/entity.EntityUser'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityUser'
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - User
  /api/user/list:
    get:
      consumes:
      - application/json
      description: Get users
      parameters:
      - description: Search
        in: query
        name: search
        type: string
      - description: Active
        in: query
        name: active
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityUser'
      security:
      - ApiKeyAuth: []
      summary: Get users
      tags:
      - User
  /api/user/me:
    get:
      consumes:
      - application/json
      description: Get me
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityUser'
      security:
      - ApiKeyAuth: []
      summary: Get me
      tags:
      - User
  /api/user/password/{id}:
    put:
      consumes:
      - application/json
      description: Update password
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User
        in: body
        name: entity.EntityUser
        required: true
        schema:
          $ref: '#/definitions/entity.EntityUser'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityUser'
      security:
      - ApiKeyAuth: []
      summary: Update password
      tags:
      - User
swagger: "2.0"
