definitions:
  entity.EntityAutoScalingGroup:
    properties:
      active:
        type: boolean
      auto_scaling_group_id:
        type: string
      auto_scaling_group_name:
        type: string
      calendars:
        items:
          $ref: '#/definitions/entity.EntityCalendar'
        type: array
      cloud_account:
        $ref: '#/definitions/entity.EntityCloudAccount'
      cloud_account_id:
        type: integer
      created_at:
        type: string
      desired_capacity:
        type: integer
      id:
        type: integer
      max_size:
        type: integer
      min_size:
        type: integer
      total_instances:
        type: integer
      updated_at:
        type: string
    type: object
  entity.EntityCalendar:
    properties:
      active:
        type: boolean
      created_at:
        type: string
      execute_time:
        type: string
      friday:
        type: boolean
      id:
        type: integer
      monday:
        type: boolean
      name:
        type: string
      saturday:
        type: boolean
      sunday:
        type: boolean
      thursday:
        type: boolean
      tuesday:
        type: boolean
      type_action:
        type: string
      updated_at:
        type: string
      valid_holiday:
        type: boolean
      valid_weekend:
        type: boolean
      wednesday:
        type: boolean
    type: object
  entity.EntityCloudAccount:
    properties:
      access_key_id:
        type: string
      active:
        type: boolean
      cloud_provider:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      nickname:
        type: string
      region:
        type: string
      secret_access_key:
        type: string
      updatedAt:
        type: string
    type: object
  entity.EntityDbinstance:
    properties:
      active:
        type: boolean
      calendars:
        items:
          $ref: '#/definitions/entity.EntityCalendar'
        type: array
      cloud_account:
        $ref: '#/definitions/entity.EntityCloudAccount'
      cloud_account_id:
        type: integer
      created_at:
        type: string
      db_instance_class:
        type: string
      db_instance_id:
        type: string
      db_instance_name:
        type: string
      db_instance_region:
        type: string
      db_instance_state:
        type: string
      db_instance_type:
        type: string
      endpoint:
        type: string
      engine:
        type: string
      id:
        type: integer
      port:
        type: integer
      updated_at:
        type: string
    type: object
  entity.EntityHoliday:
    properties:
      created_at:
        type: string
      date:
        type: string
      id:
        type: integer
      updated_at:
        type: string
    type: object
  entity.EntityInstance:
    properties:
      active:
        type: boolean
      calendars:
        items:
          $ref: '#/definitions/entity.EntityCalendar'
        type: array
      cloud_account:
        $ref: '#/definitions/entity.EntityCloudAccount'
      cloud_account_id:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      instance_id:
        type: string
      instance_name:
        type: string
      instance_region:
        type: string
      instance_state:
        type: string
      instance_type:
        type: string
      updatedAt:
        type: string
    type: object
  entity.EntityJob:
    properties:
      calendar:
        $ref: '#/definitions/entity.EntityCalendar'
      count:
        type: integer
      error:
        type: string
      id:
        type: string
      is_running:
        type: boolean
      last_run:
        type: string
      next_run:
        type: string
      scheduled_time:
        type: string
    type: object
  entity.EntityLog:
    properties:
      code:
        type: string
      content:
        type: string
      created_at:
        type: string
      error:
        type: string
      id:
        type: integer
      instance:
        type: string
      type:
        type: string
    type: object
  entity.EntityUser:
    properties:
      active:
        type: boolean
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      is_admin:
        type: boolean
      name:
        maxLength: 120
        minLength: 3
        type: string
      password:
        maxLength: 120
        minLength: 4
        type: string
      updated_at:
        type: string
    required:
    - email
    - name
    - password
    type: object
  handlers.LoginData:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/autoscallinggroup:
    get:
      consumes:
      - application/json
      description: Get All AutoScalingGroup
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            items:
              $ref: '#/definitions/entity.EntityAutoScalingGroup'
            type: array
      summary: Get All AutoScalingGroup
      tags:
      - AutoScalingGroup
    post:
      consumes:
      - application/json
      description: Create AutoScalingGroup
      parameters:
      - description: AutoScalingGroup
        in: body
        name: autoscallinggroup
        required: true
        schema:
          $ref: '#/definitions/entity.EntityAutoScalingGroup'
      produces:
      - application/json
      responses:
        "201":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityAutoScalingGroup'
      summary: Create AutoScalingGroup
      tags:
      - AutoScalingGroup
    put:
      consumes:
      - application/json
      description: Update AutoScalingGroup
      parameters:
      - description: AutoScalingGroup
        in: body
        name: autoscallinggroup
        required: true
        schema:
          $ref: '#/definitions/entity.EntityAutoScalingGroup'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityAutoScalingGroup'
      summary: Update AutoScalingGroup
      tags:
      - AutoScalingGroup
  /api/autoscallinggroup/{id}:
    delete:
      consumes:
      - application/json
      description: Delete AutoScalingGroup
      parameters:
      - description: AutoScalingGroup ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityAutoScalingGroup'
      summary: Delete AutoScalingGroup
      tags:
      - AutoScalingGroup
    get:
      consumes:
      - application/json
      description: Get AutoScalingGroup
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityAutoScalingGroup'
      summary: Get AutoScalingGroup
      tags:
      - AutoScalingGroup
  /api/calendar:
    get:
      consumes:
      - application/json
      description: Get All Calendar
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            items:
              $ref: '#/definitions/entity.EntityCalendar'
            type: array
      summary: Get All Calendar
      tags:
      - Calendar
    post:
      consumes:
      - application/json
      description: Create Calendar
      parameters:
      - description: Calendar
        in: body
        name: calendar
        required: true
        schema:
          $ref: '#/definitions/entity.EntityCalendar'
      produces:
      - application/json
      responses:
        "201":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityCalendar'
      summary: Create Calendar
      tags:
      - Calendar
    put:
      consumes:
      - application/json
      description: Update Calendar
      parameters:
      - description: Calendar
        in: body
        name: calendar
        required: true
        schema:
          $ref: '#/definitions/entity.EntityCalendar'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityCalendar'
      summary: Update Calendar
      tags:
      - Calendar
  /api/calendar/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Calendar
      parameters:
      - description: Calendar ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityCalendar'
      summary: Delete Calendar
      tags:
      - Calendar
    get:
      consumes:
      - application/json
      description: Get Calendar
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityCalendar'
      summary: Get Calendar
      tags:
      - Calendar
  /api/cloudaccount/:
    get:
      consumes:
      - application/json
      description: Get all cloud accounts
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityCloudAccount'
      security:
      - ApiKeyAuth: []
      summary: Get all cloud accounts
      tags:
      - CloudAccount
    post:
      consumes:
      - application/json
      description: Create cloud account
      parameters:
      - description: Cloud Account
        in: body
        name: entity.EntityCloudAccount
        required: true
        schema:
          $ref: '#/definitions/entity.EntityCloudAccount'
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: success
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create cloud account
      tags:
      - CloudAccount
    put:
      consumes:
      - application/json
      description: Update cloud account
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityCloudAccount'
      security:
      - ApiKeyAuth: []
      summary: Update cloud account
      tags:
      - CloudAccount
  /api/cloudaccount/{id}:
    delete:
      consumes:
      - application/json
      description: Delete cloud account
      parameters:
      - description: Cloud Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete cloud account
      tags:
      - CloudAccount
    get:
      consumes:
      - application/json
      description: Get cloud account by id
      parameters:
      - description: Cloud Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityCloudAccount'
      security:
      - ApiKeyAuth: []
      summary: Get cloud account by id
      tags:
      - CloudAccount
  /api/cloudaccount/{id}/{status}:
    get:
      consumes:
      - application/json
      description: Active/Deactive cloud account
      parameters:
      - description: Cloud Account ID
        in: path
        name: id
        required: true
        type: integer
      - description: Status
        in: path
        name: status
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityCloudAccount'
      security:
      - ApiKeyAuth: []
      summary: Active/Deactive cloud account
      tags:
      - CloudAccount
  /api/cloudaccount/update-all-instances/{id}:
    get:
      consumes:
      - application/json
      description: Update all instances of cloud account provider
      parameters:
      - description: Cloud Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update all instances of cloud account provider
      tags:
      - CloudAccount
  /api/dbinstance:
    get:
      consumes:
      - application/json
      description: Get All Dbinstance
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            items:
              $ref: '#/definitions/entity.EntityDbinstance'
            type: array
      summary: Get All Dbinstance
      tags:
      - Dbinstance
    post:
      consumes:
      - application/json
      description: Create Dbinstance
      parameters:
      - description: Dbinstance
        in: body
        name: dbinstance
        required: true
        schema:
          $ref: '#/definitions/entity.EntityDbinstance'
      produces:
      - application/json
      responses:
        "201":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityDbinstance'
      summary: Create Dbinstance
      tags:
      - Dbinstance
    put:
      consumes:
      - application/json
      description: Update Dbinstance
      parameters:
      - description: Dbinstance
        in: body
        name: dbinstance
        required: true
        schema:
          $ref: '#/definitions/entity.EntityDbinstance'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityDbinstance'
      summary: Update Dbinstance
      tags:
      - Dbinstance
  /api/dbinstance/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Dbinstance
      parameters:
      - description: Dbinstance ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityDbinstance'
      summary: Delete Dbinstance
      tags:
      - Dbinstance
    get:
      consumes:
      - application/json
      description: Get Dbinstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityDbinstance'
      summary: Get Dbinstance
      tags:
      - Dbinstance
  /api/holiday:
    get:
      consumes:
      - application/json
      description: Get All Holiday
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            items:
              $ref: '#/definitions/entity.EntityHoliday'
            type: array
      summary: Get All Holiday
      tags:
      - Holiday
    post:
      consumes:
      - application/json
      description: Create Holiday
      parameters:
      - description: Holiday
        in: body
        name: holiday
        required: true
        schema:
          $ref: '#/definitions/entity.EntityHoliday'
      produces:
      - application/json
      responses:
        "201":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityHoliday'
      summary: Create Holiday
      tags:
      - Holiday
    put:
      consumes:
      - application/json
      description: Update Holiday
      parameters:
      - description: Holiday
        in: body
        name: holiday
        required: true
        schema:
          $ref: '#/definitions/entity.EntityHoliday'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityHoliday'
      summary: Update Holiday
      tags:
      - Holiday
  /api/holiday/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Holiday
      parameters:
      - description: Holiday ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityHoliday'
      summary: Delete Holiday
      tags:
      - Holiday
    get:
      consumes:
      - application/json
      description: Get Holiday
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityHoliday'
      summary: Get Holiday
      tags:
      - Holiday
  /api/instances/:
    get:
      consumes:
      - application/json
      description: Get all instances
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityInstance'
      security:
      - ApiKeyAuth: []
      summary: Get all instances
      tags:
      - Instances
  /api/instances/{id}:
    get:
      consumes:
      - application/json
      description: Get instance by id
      parameters:
      - description: Instance ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityInstance'
      security:
      - ApiKeyAuth: []
      summary: Get instance by id
      tags:
      - Instances
    put:
      consumes:
      - application/json
      description: Update instance
      parameters:
      - description: Instance ID
        in: path
        name: id
        required: true
        type: integer
      - description: Instance
        in: body
        name: entity.EntityInstance
        required: true
        schema:
          $ref: '#/definitions/entity.EntityInstance'
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityInstance'
      security:
      - ApiKeyAuth: []
      summary: Update instance
      tags:
      - Instances
  /api/job:
    get:
      consumes:
      - application/json
      description: Get All Job
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            items:
              $ref: '#/definitions/entity.EntityJob'
            type: array
      summary: Get All Job
      tags:
      - Job
  /api/log:
    get:
      consumes:
      - application/json
      description: Get All Log
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            items:
              $ref: '#/definitions/entity.EntityLog'
            type: array
      summary: Get All Log
      tags:
      - Log
  /api/log/{id}:
    get:
      consumes:
      - application/json
      description: Get Log
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityLog'
      summary: Get Log
      tags:
      - Log
  /api/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: LoginData
        in: body
        name: handlers.LoginData
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginData'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityUser'
      summary: Login
      tags:
      - User
  /api/user/:
    get:
      consumes:
      - application/json
      description: Get users
      parameters:
      - description: Search
        in: query
        name: search
        type: string
      - description: Active
        in: query
        name: active
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityUser'
      security:
      - ApiKeyAuth: []
      summary: Get users
      tags:
      - User
  /api/user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityUser'
      security:
      - ApiKeyAuth: []
      summary: Delete user
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityUser'
      security:
      - ApiKeyAuth: []
      summary: Get user
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User
        in: body
        name: entity.EntityUser
        required: true
        schema:
          $ref: '#/definitions/entity.EntityUser'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityUser'
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - User
  /api/user/create:
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: User
        in: body
        name: entity.EntityUser
        required: true
        schema:
          $ref: '#/definitions/entity.EntityUser'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityUser'
      security:
      - ApiKeyAuth: []
      summary: Create user
      tags:
      - User
  /api/user/me:
    get:
      consumes:
      - application/json
      description: Get me
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityUser'
      security:
      - ApiKeyAuth: []
      summary: Get me
      tags:
      - User
  /api/user/password/{id}:
    put:
      consumes:
      - application/json
      description: Update password
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User
        in: body
        name: entity.EntityUser
        required: true
        schema:
          $ref: '#/definitions/entity.EntityUser'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/entity.EntityUser'
      security:
      - ApiKeyAuth: []
      summary: Update password
      tags:
      - User
swagger: "2.0"
