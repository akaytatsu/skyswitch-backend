// Code generated by MockGen. DO NOT EDIT.
// Source: app/usecase/autoscalling_groups (interfaces: IUsecaseAutoScalingGroup)

// Package mocks is a generated GoMock package.
package mocks

import (
	entity "app/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIUsecaseAutoScalingGroup is a mock of IUsecaseAutoScalingGroup interface.
type MockIUsecaseAutoScalingGroup struct {
	ctrl     *gomock.Controller
	recorder *MockIUsecaseAutoScalingGroupMockRecorder
}

// MockIUsecaseAutoScalingGroupMockRecorder is the mock recorder for MockIUsecaseAutoScalingGroup.
type MockIUsecaseAutoScalingGroupMockRecorder struct {
	mock *MockIUsecaseAutoScalingGroup
}

// NewMockIUsecaseAutoScalingGroup creates a new mock instance.
func NewMockIUsecaseAutoScalingGroup(ctrl *gomock.Controller) *MockIUsecaseAutoScalingGroup {
	mock := &MockIUsecaseAutoScalingGroup{ctrl: ctrl}
	mock.recorder = &MockIUsecaseAutoScalingGroupMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUsecaseAutoScalingGroup) EXPECT() *MockIUsecaseAutoScalingGroupMockRecorder {
	return m.recorder
}

// ActiveDeactive mocks base method.
func (m *MockIUsecaseAutoScalingGroup) ActiveDeactive(arg0 int64, arg1 bool) (*entity.EntityAutoScalingGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ActiveDeactive", arg0, arg1)
	ret0, _ := ret[0].(*entity.EntityAutoScalingGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ActiveDeactive indicates an expected call of ActiveDeactive.
func (mr *MockIUsecaseAutoScalingGroupMockRecorder) ActiveDeactive(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ActiveDeactive", reflect.TypeOf((*MockIUsecaseAutoScalingGroup)(nil).ActiveDeactive), arg0, arg1)
}

// Create mocks base method.
func (m *MockIUsecaseAutoScalingGroup) Create(arg0 *entity.EntityAutoScalingGroup) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockIUsecaseAutoScalingGroupMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIUsecaseAutoScalingGroup)(nil).Create), arg0)
}

// CreateOrUpdate mocks base method.
func (m *MockIUsecaseAutoScalingGroup) CreateOrUpdate(arg0 *entity.EntityAutoScalingGroup, arg1 bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrUpdate", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateOrUpdate indicates an expected call of CreateOrUpdate.
func (mr *MockIUsecaseAutoScalingGroupMockRecorder) CreateOrUpdate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrUpdate", reflect.TypeOf((*MockIUsecaseAutoScalingGroup)(nil).CreateOrUpdate), arg0, arg1)
}

// Delete mocks base method.
func (m *MockIUsecaseAutoScalingGroup) Delete(arg0 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockIUsecaseAutoScalingGroupMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockIUsecaseAutoScalingGroup)(nil).Delete), arg0)
}

// Get mocks base method.
func (m *MockIUsecaseAutoScalingGroup) Get(arg0 int) (*entity.EntityAutoScalingGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*entity.EntityAutoScalingGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIUsecaseAutoScalingGroupMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIUsecaseAutoScalingGroup)(nil).Get), arg0)
}

// GetAll mocks base method.
func (m *MockIUsecaseAutoScalingGroup) GetAll(arg0 entity.SearchEntityAutoScalingGroupParams) ([]entity.EntityAutoScalingGroup, int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", arg0)
	ret0, _ := ret[0].([]entity.EntityAutoScalingGroup)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetAll indicates an expected call of GetAll.
func (mr *MockIUsecaseAutoScalingGroupMockRecorder) GetAll(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockIUsecaseAutoScalingGroup)(nil).GetAll), arg0)
}

// GetAllOFCalendar mocks base method.
func (m *MockIUsecaseAutoScalingGroup) GetAllOFCalendar(arg0 int) ([]entity.EntityAutoScalingGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllOFCalendar", arg0)
	ret0, _ := ret[0].([]entity.EntityAutoScalingGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllOFCalendar indicates an expected call of GetAllOFCalendar.
func (mr *MockIUsecaseAutoScalingGroupMockRecorder) GetAllOFCalendar(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllOFCalendar", reflect.TypeOf((*MockIUsecaseAutoScalingGroup)(nil).GetAllOFCalendar), arg0)
}

// GetByID mocks base method.
func (m *MockIUsecaseAutoScalingGroup) GetByID(arg0 string) (*entity.EntityAutoScalingGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", arg0)
	ret0, _ := ret[0].(*entity.EntityAutoScalingGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockIUsecaseAutoScalingGroupMockRecorder) GetByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockIUsecaseAutoScalingGroup)(nil).GetByID), arg0)
}

// Update mocks base method.
func (m *MockIUsecaseAutoScalingGroup) Update(arg0 *entity.EntityAutoScalingGroup, arg1 bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockIUsecaseAutoScalingGroupMockRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockIUsecaseAutoScalingGroup)(nil).Update), arg0, arg1)
}
