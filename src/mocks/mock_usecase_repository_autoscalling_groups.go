// Code generated by MockGen. DO NOT EDIT.
// Source: app/usecase/autoscalling_groups (interfaces: IRepositoryAutoScalingGroup)

// Package mocks is a generated GoMock package.
package mocks

import (
	entity "app/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIRepositoryAutoScalingGroup is a mock of IRepositoryAutoScalingGroup interface.
type MockIRepositoryAutoScalingGroup struct {
	ctrl     *gomock.Controller
	recorder *MockIRepositoryAutoScalingGroupMockRecorder
}

// MockIRepositoryAutoScalingGroupMockRecorder is the mock recorder for MockIRepositoryAutoScalingGroup.
type MockIRepositoryAutoScalingGroupMockRecorder struct {
	mock *MockIRepositoryAutoScalingGroup
}

// NewMockIRepositoryAutoScalingGroup creates a new mock instance.
func NewMockIRepositoryAutoScalingGroup(ctrl *gomock.Controller) *MockIRepositoryAutoScalingGroup {
	mock := &MockIRepositoryAutoScalingGroup{ctrl: ctrl}
	mock.recorder = &MockIRepositoryAutoScalingGroupMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRepositoryAutoScalingGroup) EXPECT() *MockIRepositoryAutoScalingGroupMockRecorder {
	return m.recorder
}

// ActiveDeactive mocks base method.
func (m *MockIRepositoryAutoScalingGroup) ActiveDeactive(arg0 int64, arg1 bool) (*entity.EntityAutoScalingGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ActiveDeactive", arg0, arg1)
	ret0, _ := ret[0].(*entity.EntityAutoScalingGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ActiveDeactive indicates an expected call of ActiveDeactive.
func (mr *MockIRepositoryAutoScalingGroupMockRecorder) ActiveDeactive(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ActiveDeactive", reflect.TypeOf((*MockIRepositoryAutoScalingGroup)(nil).ActiveDeactive), arg0, arg1)
}

// Create mocks base method.
func (m *MockIRepositoryAutoScalingGroup) Create(arg0 *entity.EntityAutoScalingGroup) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockIRepositoryAutoScalingGroupMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIRepositoryAutoScalingGroup)(nil).Create), arg0)
}

// Delete mocks base method.
func (m *MockIRepositoryAutoScalingGroup) Delete(arg0 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockIRepositoryAutoScalingGroupMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockIRepositoryAutoScalingGroup)(nil).Delete), arg0)
}

// FromCalendar mocks base method.
func (m *MockIRepositoryAutoScalingGroup) FromCalendar(arg0 int) ([]entity.EntityAutoScalingGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FromCalendar", arg0)
	ret0, _ := ret[0].([]entity.EntityAutoScalingGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FromCalendar indicates an expected call of FromCalendar.
func (mr *MockIRepositoryAutoScalingGroupMockRecorder) FromCalendar(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FromCalendar", reflect.TypeOf((*MockIRepositoryAutoScalingGroup)(nil).FromCalendar), arg0)
}

// GetAll mocks base method.
func (m *MockIRepositoryAutoScalingGroup) GetAll(arg0 entity.SearchEntityAutoScalingGroupParams) ([]entity.EntityAutoScalingGroup, int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", arg0)
	ret0, _ := ret[0].([]entity.EntityAutoScalingGroup)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetAll indicates an expected call of GetAll.
func (mr *MockIRepositoryAutoScalingGroupMockRecorder) GetAll(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockIRepositoryAutoScalingGroup)(nil).GetAll), arg0)
}

// GetByID mocks base method.
func (m *MockIRepositoryAutoScalingGroup) GetByID(arg0 string) (*entity.EntityAutoScalingGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", arg0)
	ret0, _ := ret[0].(*entity.EntityAutoScalingGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockIRepositoryAutoScalingGroupMockRecorder) GetByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockIRepositoryAutoScalingGroup)(nil).GetByID), arg0)
}

// GetFromID mocks base method.
func (m *MockIRepositoryAutoScalingGroup) GetFromID(arg0 int) (*entity.EntityAutoScalingGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFromID", arg0)
	ret0, _ := ret[0].(*entity.EntityAutoScalingGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFromID indicates an expected call of GetFromID.
func (mr *MockIRepositoryAutoScalingGroupMockRecorder) GetFromID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFromID", reflect.TypeOf((*MockIRepositoryAutoScalingGroup)(nil).GetFromID), arg0)
}

// Update mocks base method.
func (m *MockIRepositoryAutoScalingGroup) Update(arg0 *entity.EntityAutoScalingGroup) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockIRepositoryAutoScalingGroupMockRecorder) Update(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockIRepositoryAutoScalingGroup)(nil).Update), arg0)
}
