// Code generated by MockGen. DO NOT EDIT.
// Source: app/usecase/job (interfaces: IUsecaseJob)

// Package mocks is a generated GoMock package.
package mocks

import (
	entity "app/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIUsecaseJob is a mock of IUsecaseJob interface.
type MockIUsecaseJob struct {
	ctrl     *gomock.Controller
	recorder *MockIUsecaseJobMockRecorder
}

// MockIUsecaseJobMockRecorder is the mock recorder for MockIUsecaseJob.
type MockIUsecaseJobMockRecorder struct {
	mock *MockIUsecaseJob
}

// NewMockIUsecaseJob creates a new mock instance.
func NewMockIUsecaseJob(ctrl *gomock.Controller) *MockIUsecaseJob {
	mock := &MockIUsecaseJob{ctrl: ctrl}
	mock.recorder = &MockIUsecaseJobMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUsecaseJob) EXPECT() *MockIUsecaseJobMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockIUsecaseJob) GetAll() ([]entity.EntityJob, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]entity.EntityJob)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockIUsecaseJobMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockIUsecaseJob)(nil).GetAll))
}
